import asyncio

from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery

from database import User
from helpers import get_user
from settings import *


@dp.message(Command("start"))
async def start(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ù–æ–≤–æ—Å—Ç–∏üì∞", callback_data="news")],
                                                     [InlineKeyboardButton(text="–ù–∞–π—Ç–∏ –¥—Ä—É–≥–∞ –¥–ª—è –∑–∞–Ω—è—Ç–∏–πüòä",
                                                                           callback_data="find")],
                                                     [InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—åüë§", callback_data="profile")]])
    user = get_user(message.chat.id)
    if user:
        return await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {user.name}!", reply_markup=keyboard)
    user = User(id=message.chat.id, name=message.from_user.full_name, link=f"https://t.me/{message.from_user.username}")
    session.add(user)
    session.commit()
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç!", reply_markup=keyboard)


@dp.callback_query(F.data == "menu")
async def back_to_menu(query: CallbackQuery):
    await query.answer()
    message = query.message
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="–ù–æ–≤–æ—Å—Ç–∏üì∞", callback_data="news")],
                                                     [InlineKeyboardButton(text="–ù–∞–π—Ç–∏ –¥—Ä—É–≥–∞ –¥–ª—è –∑–∞–Ω—è—Ç–∏–πüòä",
                                                                           callback_data="find")],
                                                     [InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—åüë§", callback_data="profile")]])
    user = get_user(message.chat.id)
    if user:
        return await message.edit_text(f"–ü—Ä–∏–≤–µ—Ç, {user.name}!", reply_markup=keyboard)


@dp.callback_query(F.data == "profile")
async def profile(query: CallbackQuery):
    await query.answer()
    text = ""
    user = get_user(query.message.chat.id)
    markup = None
    if user:
        markup = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å", callback_data=f"edit_{user.id}")],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"menu")]
        ])
        text = f"–ò–º—è: <b>{user.name}</b>\n" \
               f"–í–æ–∑—Ä–∞—Å—Ç: <b>{user.age}</b>\n" \
               f"–û–ø–∏—Å–∞–Ω–∏–µ: <b>{user.desription}</b>\n" \
               f"–£–≤–ª–µ—á–µ–Ω–∏—è: <b>{', '.join(user.tags) if user.tags else None}</b>".replace("None", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
    if text:
        return await query.message.edit_text(text, reply_markup=markup, parse_mode="HTML")


async def run():
    print("started")
    await dp.start_polling(bot)
    print("end")


if __name__ == "__main__":
    print("starting bot...")
    asyncio.run(run())
